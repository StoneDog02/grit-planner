{
  "version": 3,
  "sources": ["../../../node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx", "../../../app/root.tsx", "../../../app/components/Layout.tsx", "../../../app/routes/admin.manage.tsx", "../../../app/utils/session.server.ts", "../../../app/models/gallery.server.ts", "../../../app/utils/s3.server.ts", "../../../app/routes/admin.upload.tsx", "../../../app/routes/admin.login.tsx", "../../../app/routes/request-bid.tsx", "../../../app/routes/admin.test.tsx", "../../../app/routes/services.tsx", "../../../app/routes/contact.tsx", "../../../app/routes/gallery.tsx", "../../../app/routes/_index.tsx", "../../../app/routes/admin.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["import { PassThrough } from \"node:stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport * as isbotModule from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  let prohibitOutOfOrderStreaming =\n    isBotRequest(request.headers.get(\"user-agent\")) || remixContext.isSpaMode;\n\n  return prohibitOutOfOrderStreaming\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\n// We have some Remix apps in the wild already running with isbot@3 so we need\n// to maintain backwards compatibility even though we want new apps to use\n// isbot@4.  That way, we can ship this as a minor Semver update to @remix-run/dev.\nfunction isBotRequest(userAgent: string | null) {\n  if (!userAgent) {\n    return false;\n  }\n\n  // isbot >= 3.8.0, >4\n  if (\"isbot\" in isbotModule && typeof isbotModule.isbot === \"function\") {\n    return isbotModule.isbot(userAgent);\n  }\n\n  // isbot < 3.8.0\n  if (\"default\" in isbotModule && typeof isbotModule.default === \"function\") {\n    return isbotModule.default(userAgent);\n  }\n\n  return false;\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n          const stream = createReadableStreamFromReadable(body);\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(stream, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration } from\n\"@remix-run/react\";\nimport type { LinksFunction, LoaderFunction } from \"@remix-run/node\";\nimport React from \"react\";\nimport styles from \"./styles/tailwind.css\";\nimport Layout from \"./components/Layout\";\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: styles },\n{ rel: \"icon\", type: \"image/svg+xml\", href: \"/images/logo.svg\" },\n{ rel: \"alternate icon\", href: \"/favicon.ico\" }];\n\n\nexport const loader: LoaderFunction = () => {\n  console.log(\"Root loader called\");\n  return null;\n};\n\nexport default function App() {\n  console.log(\"Root component rendered\");\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"min-h-screen\">\n        <Layout>\n          <Outlet />\n        </Layout>\n\n        <footer className=\"bg-white\">\n          <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8\">\n            <p className=\"text-center text-black\">\n              \u00A9 {new Date().getFullYear()} Grit Construction. All rights\n              reserved.\n            </p>\n          </div>\n        </footer>\n\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>);\n\n}", "import React, { useState } from \"react\";\nimport { Link, useLocation } from \"@remix-run/react\";\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps) {\n  const location = useLocation();\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n  const navigation = [\n    { name: \"Home\", href: \"/\" },\n    { name: \"Services\", href: \"/services\" },\n    { name: \"Gallery\", href: \"/gallery\" },\n    { name: \"Contact\", href: \"/contact\" },\n  ];\n\n  const requestBidLink = { name: \"Request Bid\", href: \"/request-bid\" };\n\n  return (\n    <>\n      <header className=\"bg-white shadow-sm\">\n        <nav className=\"max-w-7xl mx-auto px-4\">\n          <div className=\"flex h-16 items-center justify-between\">\n            {/* Mobile menu button */}\n            <div className=\"w-10 flex md:hidden\">\n              <button\n                type=\"button\"\n                className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100\"\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              >\n                <span className=\"sr-only\">Open main menu</span>\n                <svg\n                  className=\"h-6 w-6\"\n                  fill=\"none\"\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth=\"1.5\"\n                  stroke=\"currentColor\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d=\"M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5\"\n                  />\n                </svg>\n              </button>\n            </div>\n\n            {/* Mobile-only centered logo */}\n            <div className=\"absolute left-1/2 top-1/2 transform -translate-x-1/2 -translate-y-1/2 md:hidden\">\n              <Link to=\"/\" className=\"py-3 px-6\">\n                <img\n                  src=\"/images/Grit_construction_logo-removebg-preview.png\"\n                  alt=\"Grit Construction\"\n                  className=\"h-12 w-auto\"\n                />\n              </Link>\n            </div>\n\n            {/* Spacer div for mobile to maintain layout */}\n            <div className=\"w-10 md:hidden\"></div>\n\n            {/* Desktop logo and navigation */}\n            <div className=\"hidden md:flex md:flex-1 items-center\">\n              <Link to=\"/\" className=\"py-3 px-6\">\n                <img\n                  src=\"/images/Grit_construction_logo-removebg-preview.png\"\n                  alt=\"Grit Construction\"\n                  className=\"h-12 w-auto\"\n                />\n              </Link>\n\n              <div className=\"ml-16 flex\">\n                {navigation.map((item) => {\n                  const isActive =\n                    (item.href === \"/\" && location.pathname === \"/\") ||\n                    (item.href !== \"/\" &&\n                      location.pathname.startsWith(item.href));\n\n                  return (\n                    <Link\n                      key={item.name}\n                      to={item.href}\n                      className={`inline-flex items-center px-4 pt-1 border-b-2 text-sm font-medium mx-6 ${\n                        isActive\n                          ? \"border-red-500 text-gray-900\"\n                          : \"border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700\"\n                      }`}\n                    >\n                      {item.name}\n                    </Link>\n                  );\n                })}\n              </div>\n            </div>\n\n            {/* Request Bid Button */}\n            <div className=\"hidden md:flex items-center\">\n              <Link\n                to={requestBidLink.href}\n                className={`inline-flex items-center px-6 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 transition-colors ${\n                  location.pathname.startsWith(requestBidLink.href)\n                    ? \"bg-red-700\"\n                    : \"\"\n                }`}\n              >\n                {requestBidLink.name}\n              </Link>\n            </div>\n          </div>\n\n          {/* Mobile menu drawer */}\n          <div\n            className={`${\n              isMobileMenuOpen ? \"block\" : \"hidden\"\n            } md:hidden border-t border-gray-200`}\n          >\n            <div className=\"pt-2 pb-3 space-y-1\">\n              {[...navigation, requestBidLink].map((item) => {\n                const isActive =\n                  (item.href === \"/\" && location.pathname === \"/\") ||\n                  (item.href !== \"/\" &&\n                    location.pathname.startsWith(item.href));\n\n                return (\n                  <Link\n                    key={item.name}\n                    to={item.href}\n                    className={`block pl-3 pr-4 py-2 text-base font-medium ${\n                      isActive\n                        ? \"bg-red-50 border-l-4 border-red-500 text-red-700\"\n                        : \"border-l-4 border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700\"\n                    }`}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    {item.name}\n                  </Link>\n                );\n              })}\n            </div>\n          </div>\n        </nav>\n      </header>\n\n      <main>{children}</main>\n    </>\n  );\n}\n", "import React from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData, useActionData } from \"@remix-run/react\";\nimport { requireAdminUser } from \"../utils/session.server\";\nimport {\n  getAllImages,\n  updateImage,\n  deleteImage,\n  type GalleryImage,\n} from \"../models/gallery.server\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\n\ninterface ActionData {\n  error?: string;\n  success?: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  await requireAdminUser(request);\n  const images = await getAllImages();\n  return json({ images });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  await requireAdminUser(request);\n\n  const formData = await request.formData();\n  const action = formData.get(\"_action\");\n\n  if (action === \"delete\") {\n    const imageId = formData.get(\"imageId\") as string;\n    if (!imageId) {\n      return json({ error: \"Image ID is required\" }, { status: 400 });\n    }\n\n    const success = await deleteImage(imageId);\n    if (!success) {\n      return json({ error: \"Failed to delete image\" }, { status: 400 });\n    }\n\n    return json({ success: \"Image deleted successfully\" });\n  }\n\n  if (action === \"update\") {\n    const imageId = formData.get(\"imageId\") as string;\n    const category = formData.get(\"category\") as string;\n    const service = formData.get(\"service\") as string;\n    const alt = formData.get(\"alt\") as string;\n\n    if (!imageId || !category || !service || !alt) {\n      return json(\n        { error: \"Image ID, category, service, and description are required\" },\n        { status: 400 }\n      );\n    }\n\n    const updated = await updateImage(imageId, { category, service, alt });\n    if (!updated) {\n      return json({ error: \"Failed to update image\" }, { status: 400 });\n    }\n\n    return json({ success: \"Image updated successfully\" });\n  }\n\n  return json({ error: \"Invalid action\" }, { status: 400 });\n};\n\nexport default function ManageGallery() {\n  const { images } = useLoaderData<{ images: GalleryImage[] }>();\n  const actionData = useActionData<ActionData>();\n  const [editingId, setEditingId] = React.useState<string | null>(null);\n\n  // Define available services\n  const services = [\n    \"general-contracting\",\n    \"framing\",\n    \"concrete\",\n    \"door-window-installation\",\n    \"finish-carpentry-trim\",\n    \"drywall\",\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-black py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-3xl font-extrabold text-white\">Manage Gallery</h2>\n          <p className=\"mt-2 text-sm text-gray-400\">\n            Edit or delete images from the gallery\n          </p>\n        </div>\n\n        {actionData?.error && (\n          <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n            {actionData.error}\n          </div>\n        )}\n\n        {actionData?.success && (\n          <div className=\"mb-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded\">\n            {actionData.success}\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n          {images.map((image) => (\n            <div\n              key={image.id}\n              className=\"bg-gray-900 rounded-lg overflow-hidden shadow-lg\"\n            >\n              <div className=\"aspect-w-16 aspect-h-9\">\n                <img\n                  src={image.src}\n                  alt={image.alt}\n                  className=\"w-full h-full object-cover\"\n                />\n              </div>\n\n              {editingId === image.id ? (\n                <Form method=\"post\" className=\"p-4\">\n                  <input type=\"hidden\" name=\"imageId\" value={image.id} />\n                  <input type=\"hidden\" name=\"_action\" value=\"update\" />\n\n                  <div className=\"mb-3\">\n                    <label className=\"block text-sm font-medium text-gray-300\">\n                      Service\n                    </label>\n                    <select\n                      name=\"service\"\n                      defaultValue={image.service}\n                      className=\"mt-1 block w-full rounded-md border-gray-600 bg-gray-800 text-white\"\n                      required\n                    >\n                      {services.map((service) => (\n                        <option key={service} value={service}>\n                          {service\n                            .split(\"-\")\n                            .map(\n                              (word) =>\n                                word.charAt(0).toUpperCase() + word.slice(1)\n                            )\n                            .join(\" \")}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label className=\"block text-sm font-medium text-gray-300\">\n                      Category\n                    </label>\n                    <select\n                      name=\"category\"\n                      defaultValue={image.category}\n                      className=\"mt-1 block w-full rounded-md border-gray-600 bg-gray-800 text-white\"\n                      required\n                    >\n                      <option value=\"residential\">Residential</option>\n                      <option value=\"commercial\">Commercial</option>\n                    </select>\n                  </div>\n\n                  <div className=\"mb-3\">\n                    <label className=\"block text-sm font-medium text-gray-300\">\n                      Description\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"alt\"\n                      defaultValue={image.alt}\n                      className=\"mt-1 block w-full rounded-md border-gray-600 bg-gray-800 text-white\"\n                      required\n                    />\n                  </div>\n\n                  <div className=\"flex justify-end space-x-2\">\n                    <button\n                      type=\"button\"\n                      onClick={() => setEditingId(null)}\n                      className=\"px-3 py-1 bg-gray-700 text-white rounded hover:bg-gray-600\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-500\"\n                    >\n                      Save\n                    </button>\n                  </div>\n                </Form>\n              ) : (\n                <div className=\"p-4\">\n                  <p className=\"text-white text-sm mb-1\">{image.alt}</p>\n                  <div className=\"flex gap-2 mb-3\">\n                    <span className=\"text-red-500 text-xs\">\n                      {image.service\n                        .split(\"-\")\n                        .map(\n                          (word) => word.charAt(0).toUpperCase() + word.slice(1)\n                        )\n                        .join(\" \")}\n                    </span>\n                    <span className=\"text-gray-400 text-xs\">\u2022</span>\n                    <span className=\"text-gray-400 text-xs\">\n                      {image.category.charAt(0).toUpperCase() +\n                        image.category.slice(1)}\n                    </span>\n                  </div>\n\n                  <div className=\"flex justify-end space-x-2\">\n                    <button\n                      onClick={() => setEditingId(image.id)}\n                      className=\"px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-500\"\n                    >\n                      Edit\n                    </button>\n                    <Form method=\"post\" className=\"inline\">\n                      <input type=\"hidden\" name=\"imageId\" value={image.id} />\n                      <input type=\"hidden\" name=\"_action\" value=\"delete\" />\n                      <button\n                        type=\"submit\"\n                        className=\"px-3 py-1 bg-red-600 text-white rounded hover:bg-red-500\"\n                        onClick={(e) => {\n                          if (\n                            !confirm(\n                              \"Are you sure you want to delete this image?\"\n                            )\n                          ) {\n                            e.preventDefault();\n                          }\n                        }}\n                      >\n                        Delete\n                      </button>\n                    </Form>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\n\nconst sessionSecret = process.env.SESSION_SECRET;\nif (!sessionSecret) {\n  throw new Error(\"SESSION_SECRET must be set\");\n}\n\nexport const storage = createCookieSessionStorage({\n  cookie: {\n    name: \"GRIT_admin_session\",\n    secure: process.env.NODE_ENV === \"production\",\n    secrets: [sessionSecret],\n    sameSite: \"lax\",\n    path: \"/\",\n    maxAge: 60 * 60 * 24 * 30, // 30 days\n    httpOnly: true,\n  },\n});\n\nexport async function createUserSession({\n  username,\n  redirectTo,\n}: {\n  username: string;\n  redirectTo: string;\n}) {\n  const session = await storage.getSession();\n  session.set(\"username\", username);\n\n  console.log(\"Creating session:\", {\n    username,\n    redirectTo,\n    hasSession: !!session,\n  });\n\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session),\n    },\n  });\n}\n\nexport async function getUserSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  console.log(\"Getting user session:\", {\n    hasCookie: !!cookie,\n    cookieValue: cookie,\n  });\n  return storage.getSession(cookie);\n}\n\nexport async function requireAdminUser(request: Request) {\n  const session = await getUserSession(request);\n  const username = session.get(\"username\");\n  const expectedUsername = process.env.ADMIN_USERNAME;\n\n  console.log(\"Session check:\", {\n    hasSession: !!session,\n    username,\n    expectedUsername,\n    matches: username === expectedUsername,\n    url: request.url,\n  });\n\n  // Only redirect if we don't have a valid session\n  if (!username || username !== expectedUsername) {\n    const url = new URL(request.url);\n\n    // Don't redirect or destroy session if we're already on the login page\n    // or if we're at the /admin root (which handles its own redirects)\n    if (url.pathname === \"/admin/login\" || url.pathname === \"/admin\") {\n      return null;\n    }\n\n    // For other protected routes, clear session and redirect\n    throw redirect(\"/admin/login\", {\n      headers: {\n        \"Set-Cookie\": await storage.destroySession(session),\n      },\n    });\n  }\n\n  return username;\n}\n\nexport async function logout(request: Request) {\n  const session = await getUserSession(request);\n  return redirect(\"/admin/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.destroySession(session),\n    },\n  });\n}\n", "import { GetObjectCommand, PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { s3Client, AWS_BUCKET_NAME } from \"../utils/s3.server\";\n\nexport interface GalleryImage {\n  id: string;\n  src: string;\n  alt: string;\n  category: string;\n  service: string;\n  createdAt: string;\n}\n\n// In-memory cache\nlet galleryImages: GalleryImage[] = [];\n\nconst GALLERY_METADATA_KEY = \"gallery-metadata.json\";\n\n// Helper function to load gallery data from S3\nasync function loadGalleryFromS3(): Promise<void> {\n  try {\n    const command = new GetObjectCommand({\n      Bucket: AWS_BUCKET_NAME,\n      Key: GALLERY_METADATA_KEY,\n    });\n\n    const response = await s3Client.send(command);\n    const data = await response.Body?.transformToString();\n    if (data) {\n      const parsedData = JSON.parse(data);\n      if (parsedData && Array.isArray(parsedData.images)) {\n        galleryImages = parsedData.images;\n      }\n    }\n  } catch (error) {\n    if ((error as any).name === \"NoSuchKey\") {\n      // Initialize with empty array if file doesn't exist\n      galleryImages = [];\n      await saveGalleryToS3();\n    } else {\n      console.error(\"Error loading gallery data from S3:\", error);\n      throw error;\n    }\n  }\n}\n\n// Helper function to save gallery data to S3\nasync function saveGalleryToS3(): Promise<void> {\n  try {\n    const command = new PutObjectCommand({\n      Bucket: AWS_BUCKET_NAME,\n      Key: GALLERY_METADATA_KEY,\n      Body: JSON.stringify({ images: galleryImages }, null, 2),\n      ContentType: \"application/json\",\n    });\n\n    await s3Client.send(command);\n  } catch (error) {\n    console.error(\"Error saving gallery data to S3:\", error);\n    throw error;\n  }\n}\n\n// Initialize data\nloadGalleryFromS3().catch(console.error);\n\nexport async function getAllImages(): Promise<GalleryImage[]> {\n  // Refresh data from S3 before returning\n  await loadGalleryFromS3();\n  return galleryImages;\n}\n\nexport function getImageById(id: string): GalleryImage | undefined {\n  return galleryImages.find((img) => img.id === id);\n}\n\nexport async function addImage(\n  image: Omit<GalleryImage, \"id\" | \"createdAt\">\n): Promise<GalleryImage> {\n  const newImage: GalleryImage = {\n    ...image,\n    id: Date.now().toString(),\n    createdAt: new Date().toISOString(),\n  };\n\n  galleryImages.push(newImage);\n  await saveGalleryToS3();\n  return newImage;\n}\n\nexport async function updateImage(\n  id: string,\n  updates: Partial<Pick<GalleryImage, \"alt\" | \"category\" | \"service\">>\n): Promise<GalleryImage | null> {\n  const index = galleryImages.findIndex((img) => img.id === id);\n  if (index === -1) return null;\n\n  galleryImages[index] = {\n    ...galleryImages[index],\n    ...updates,\n  };\n\n  await saveGalleryToS3();\n  return galleryImages[index];\n}\n\nexport async function deleteImage(id: string): Promise<boolean> {\n  const initialLength = galleryImages.length;\n  galleryImages = galleryImages.filter((img) => img.id !== id);\n  const wasDeleted = galleryImages.length !== initialLength;\n\n  if (wasDeleted) {\n    await saveGalleryToS3();\n  }\n\n  return wasDeleted;\n}\n", "import { S3Client, PutObjectCommand } from \"@aws-sdk/client-s3\";\n\n// Log environment variables (without sensitive values)\nconsole.log(\"S3 Configuration Check:\", {\n  hasRegion: !!process.env.MY_AWS_REGION,\n  hasAccessKey: !!process.env.MY_AWS_ACCESS_KEY_ID,\n  hasSecretKey: !!process.env.MY_AWS_SECRET_KEY,\n  hasBucketName: !!process.env.AWS_BUCKET_NAME,\n  region: process.env.MY_AWS_REGION,\n  bucketName: process.env.AWS_BUCKET_NAME,\n});\n\nif (!process.env.MY_AWS_REGION) {\n  throw new Error(\"MY_AWS_REGION is not configured\");\n}\nif (!process.env.MY_AWS_ACCESS_KEY_ID) {\n  throw new Error(\"MY_AWS_ACCESS_KEY_ID is not configured\");\n}\nif (!process.env.MY_AWS_SECRET_KEY) {\n  throw new Error(\"MY_AWS_SECRET_KEY is not configured\");\n}\nif (!process.env.AWS_BUCKET_NAME) {\n  throw new Error(\"AWS_BUCKET_NAME is not configured\");\n}\n\nexport const s3Client = new S3Client({\n  region: process.env.MY_AWS_REGION,\n  credentials: {\n    accessKeyId: process.env.MY_AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.MY_AWS_SECRET_KEY,\n  },\n});\n\n// Test the S3 client configuration\ns3Client.config.credentials().then(\n  (creds) => {\n    console.log(\"S3 client configured successfully\");\n  },\n  (error) => {\n    console.error(\"S3 client configuration error:\", error);\n  }\n);\n\nexport const AWS_BUCKET_NAME = process.env.AWS_BUCKET_NAME;\nexport const AWS_REGION = process.env.MY_AWS_REGION;\n", "import React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData, Link } from \"@remix-run/react\";\nimport { requireAdminUser } from \"../utils/session.server\";\nimport { PutObjectCommand } from \"@aws-sdk/client-s3\";\nimport { s3Client, AWS_BUCKET_NAME, AWS_REGION } from \"../utils/s3.server\";\nimport { addImage } from \"../models/gallery.server\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\nimport sharp from \"sharp\";\n\ninterface ActionData {\n  error?: string;\n  success?: boolean;\n  imageUrl?: string;\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  // This will redirect to login if not authenticated\n  await requireAdminUser(request);\n  return json({});\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  await requireAdminUser(request);\n\n  const formData = await request.formData();\n  const image = formData.get(\"image\") as File;\n  const category = formData.get(\"category\") as string;\n  const service = formData.get(\"service\") as string;\n  const alt = formData.get(\"alt\") as string;\n\n  console.log(\"Upload attempt:\", {\n    hasImage: !!image,\n    imageType: image?.type,\n    imageName: image?.name,\n    imageSize: image?.size,\n    category,\n    service,\n    alt,\n  });\n\n  if (!image || !category || !service || !alt) {\n    return json(\n      { error: \"Image, category, service, and description are required\" },\n      { status: 400 }\n    );\n  }\n\n  try {\n    // Process the image on the server side\n    console.log(\"Processing image...\");\n    const buffer = Buffer.from(await image.arrayBuffer());\n    let processedImage = buffer;\n\n    if (sharp) {\n      console.log(\"Resizing image with sharp...\");\n      processedImage = await sharp(buffer)\n        .resize(1200, 800, { fit: \"inside\" })\n        .jpeg({ quality: 80 })\n        .toBuffer();\n    }\n\n    // Upload to S3\n    const filename = `${Date.now()}-${image.name}`;\n    console.log(\"Attempting S3 upload:\", {\n      bucket: AWS_BUCKET_NAME,\n      region: AWS_REGION,\n      filename,\n      imageSize: processedImage.length,\n    });\n\n    await s3Client.send(\n      new PutObjectCommand({\n        Bucket: AWS_BUCKET_NAME,\n        Key: filename,\n        Body: processedImage,\n        ContentType: \"image/jpeg\",\n      })\n    );\n\n    const imageUrl = `https://${AWS_BUCKET_NAME}.s3.${AWS_REGION}.amazonaws.com/${filename}`;\n    console.log(\"Upload successful:\", { imageUrl });\n\n    // Save image metadata to our gallery data\n    const savedImage = await addImage({\n      src: imageUrl,\n      alt,\n      category,\n      service,\n    });\n\n    console.log(\"Image metadata saved:\", savedImage);\n\n    return json({ success: true, imageUrl });\n  } catch (error) {\n    console.error(\"Upload error details:\", {\n      error: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined,\n      name: error instanceof Error ? error.name : undefined,\n    });\n\n    return json(\n      { error: \"Failed to upload image. Please try again.\" },\n      { status: 500 }\n    );\n  }\n};\n\nexport default function AdminUpload() {\n  const actionData = useActionData<ActionData>();\n\n  // Define available services\n  const services = [\n    \"general-contracting\",\n    \"framing\",\n    \"concrete\",\n    \"door-window-installation\",\n    \"finish-carpentry-trim\",\n    \"drywall\",\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-black py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-3xl mx-auto\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-extrabold text-white\">Upload Image</h2>\n          <p className=\"mt-2 text-sm text-gray-400\">\n            Add new images to the gallery\n          </p>\n          <Link\n            to=\"/admin/manage\"\n            className=\"inline-block mt-2 text-red-500 hover:text-red-400\"\n          >\n            Manage existing images \u2192\n          </Link>\n        </div>\n\n        <Form\n          method=\"post\"\n          className=\"mt-8 space-y-6\"\n          encType=\"multipart/form-data\"\n        >\n          <div className=\"space-y-4\">\n            <div>\n              <label\n                htmlFor=\"image\"\n                className=\"block text-sm font-medium text-white\"\n              >\n                Image\n              </label>\n              <input\n                type=\"file\"\n                id=\"image\"\n                name=\"image\"\n                accept=\"image/*\"\n                required\n                className=\"mt-1 block w-full text-sm text-gray-300\n                file:mr-4 file:py-2 file:px-4\n                file:rounded-full file:border-0\n                file:text-sm file:font-semibold\n                file:bg-red-600 file:text-white\n                hover:file:bg-red-700\"\n              />\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"service\"\n                className=\"block text-sm font-medium text-white\"\n              >\n                Service\n              </label>\n              <select\n                id=\"service\"\n                name=\"service\"\n                required\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"\">Select a service</option>\n                {services.map((service) => (\n                  <option key={service} value={service}>\n                    {service\n                      .split(\"-\")\n                      .map(\n                        (word) => word.charAt(0).toUpperCase() + word.slice(1)\n                      )\n                      .join(\" \")}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"category\"\n                className=\"block text-sm font-medium text-white\"\n              >\n                Category\n              </label>\n              <select\n                id=\"category\"\n                name=\"category\"\n                required\n                className=\"mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n              >\n                <option value=\"\">Select a category</option>\n                <option value=\"residential\">Residential</option>\n                <option value=\"commercial\">Commercial</option>\n              </select>\n            </div>\n\n            <div>\n              <label\n                htmlFor=\"alt\"\n                className=\"block text-sm font-medium text-white\"\n              >\n                Description\n              </label>\n              <input\n                type=\"text\"\n                id=\"alt\"\n                name=\"alt\"\n                required\n                className=\"mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                placeholder=\"Brief description of the image\"\n              />\n            </div>\n          </div>\n\n          {actionData?.error && (\n            <div className=\"text-red-500 text-sm\">{actionData.error}</div>\n          )}\n\n          {actionData?.success && (\n            <div className=\"text-green-500 text-sm\">\n              Image uploaded successfully!\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              Upload\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport {\n  createUserSession,\n  getUserSession,\n  storage,\n} from \"../utils/session.server\";\nimport bcrypt from \"bcryptjs\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\n\ninterface ActionData {\n  error?: string;\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  try {\n    const formData = await request.formData();\n    const username = formData.get(\"username\")?.toString() ?? \"\";\n    const password = formData.get(\"password\")?.toString() ?? \"\";\n\n    // Get environment variables\n    const storedHash = process.env.ADMIN_PASSWORD_HASH || \"\";\n    const storedUsername = process.env.ADMIN_USERNAME || \"\";\n\n    // Debug environment variables\n    console.log(\"Environment Debug:\");\n    console.log(\"Raw stored hash:\", storedHash);\n    console.log(\"Raw stored username:\", storedUsername);\n    console.log(\"Hash length:\", storedHash.length);\n    console.log(\"Username length:\", storedUsername.length);\n\n    // Basic validation\n    if (!username || !password) {\n      return json(\n        { error: \"Username and password are required\" },\n        { status: 400 }\n      );\n    }\n\n    // Clean the hash (remove quotes and trim)\n    const cleanHash = storedHash.replace(/^[\"']|[\"']$/g, \"\").trim();\n    console.log(\"Cleaned hash:\", cleanHash);\n    console.log(\"Cleaned hash length:\", cleanHash.length);\n\n    // Simple credential check\n    const isValidUsername = username === storedUsername;\n\n    console.log(\"Username comparison:\", {\n      provided: username,\n      stored: storedUsername,\n      matches: isValidUsername,\n    });\n\n    let isValidPassword = false;\n    try {\n      isValidPassword = await bcrypt.compare(password, cleanHash);\n      console.log(\"Password validation result:\", isValidPassword);\n    } catch (error) {\n      console.error(\"bcrypt error:\", error);\n      return json({ error: \"Error validating credentials\" }, { status: 500 });\n    }\n\n    if (!isValidUsername || !isValidPassword) {\n      return json({ error: \"Invalid credentials\" }, { status: 401 });\n    }\n\n    // Create new session\n    return createUserSession({\n      username,\n      redirectTo: \"/admin/upload\",\n    });\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return json({ error: \"An error occurred during login\" }, { status: 500 });\n  }\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const session = await getUserSession(request);\n  const username = session.get(\"username\");\n\n  console.log(\"Login page loader:\", {\n    hasSession: !!session,\n    username,\n    expectedUsername: process.env.ADMIN_USERNAME,\n  });\n\n  // Only redirect if we have a valid session\n  if (username && username === process.env.ADMIN_USERNAME) {\n    console.log(\"Valid session found, redirecting to upload\");\n    return redirect(\"/admin/upload\");\n  }\n\n  // Otherwise, allow login page to render\n  console.log(\"No valid session, showing login page\");\n  return null;\n};\n\nexport default function Login() {\n  const actionData = useActionData<ActionData>();\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Admin Login\n          </h2>\n        </div>\n        <Form method=\"post\" className=\"mt-8 space-y-6\">\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"username\" className=\"sr-only\">\n                Username\n              </label>\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Username\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n              />\n            </div>\n          </div>\n\n          {actionData?.error && (\n            <div className=\"text-red-600 text-sm\">{actionData.error}</div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Sign in\n            </button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useFetcher } from \"@remix-run/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Resend } from \"resend\";\n\n// Define the shape of our form data\ninterface BidRequestForm {\n  name: string;\n  email: string;\n  phone: string;\n  contactPreference: string;\n  scope: string;\n  projectType: string;\n  projectDescription: string;\n  timeline: string;\n}\n\n// Define the response type\ninterface ActionResponse {\n  success: boolean;\n  message?: string;\n  error?: string;\n  emailId?: string;\n}\n\n// Server-side action to handle form submission\nexport const action: ActionFunction = async ({ request }) => {\n  // Initialize Resend with your API key - only on server side\n  const resend = new Resend(process.env.RESEND_API_KEY);\n\n  const formData = await request.formData();\n\n  // Safely extract and validate form data\n  const name = formData.get(\"name\");\n  const email = formData.get(\"email\");\n  const phone = formData.get(\"phone\");\n  const contactPreference = formData.get(\"contactPreference\");\n  const scope = formData.get(\"scope\");\n  const projectType = formData.get(\"projectType\");\n  const projectDescription = formData.get(\"projectDescription\");\n  const timeline = formData.get(\"timeline\");\n\n  // Validate all required fields are present and are strings\n  if (\n    !name ||\n    !email ||\n    !phone ||\n    !contactPreference ||\n    !scope ||\n    !projectType ||\n    !projectDescription ||\n    !timeline ||\n    typeof name !== \"string\" ||\n    typeof email !== \"string\" ||\n    typeof phone !== \"string\" ||\n    typeof contactPreference !== \"string\" ||\n    typeof scope !== \"string\" ||\n    typeof projectType !== \"string\" ||\n    typeof projectDescription !== \"string\" ||\n    typeof timeline !== \"string\"\n  ) {\n    return json(\n      { success: false, error: \"All fields are required and must be valid.\" },\n      { status: 400 }\n    );\n  }\n\n  const data: BidRequestForm = {\n    name,\n    email,\n    phone,\n    contactPreference: contactPreference as string,\n    scope,\n    projectType,\n    projectDescription,\n    timeline,\n  };\n\n  try {\n    const { data: resendData, error } = await resend.emails.send({\n      from: \"Grit Construction <no-reply@grit-built.com>\",\n      to: [\"gritconstruction2023@gmail.com\"],\n      subject: `New Bid Request from ${\n        data.name.charAt(0).toUpperCase() + data.name.slice(1)\n      }`,\n      html: `\n        <h2>New Bid Request</h2>\n        <p><strong>Name:</strong> ${\n          data.name.charAt(0).toUpperCase() + data.name.slice(1)\n        }</p>\n        <p><strong>Email:</strong> ${data.email.toLowerCase()}</p>\n        <p><strong>Phone:</strong> ${data.phone}</p>\n        <p><strong>Preferred Contact Method:</strong> ${\n          data.contactPreference.charAt(0).toUpperCase() +\n          data.contactPreference.slice(1)\n        }</p>\n        <p><strong>Project Scope:</strong> ${\n          data.scope.charAt(0).toUpperCase() + data.scope.slice(1)\n        }</p>\n        <p><strong>Project Type:</strong> ${\n          data.projectType.charAt(0).toUpperCase() + data.projectType.slice(1)\n        }</p>\n        <p><strong>Project Description:</strong> ${\n          data.projectDescription.charAt(0).toUpperCase() +\n          data.projectDescription.slice(1)\n        }</p>\n        <p><strong>Desired Timeline:</strong> ${\n          data.timeline.charAt(0).toUpperCase() + data.timeline.slice(1)\n        }</p>\n      `,\n    });\n\n    if (error) {\n      return json(\n        {\n          success: false,\n          error: `Failed to send email: ${error.message}`,\n        },\n        { status: 500 }\n      );\n    }\n\n    return json(\n      {\n        success: true,\n        message: \"Request sent successfully!\",\n      },\n      { status: 200 }\n    );\n  } catch (error) {\n    return json(\n      {\n        success: false,\n        error:\n          error instanceof Error\n            ? error.message\n            : \"Failed to submit bid request. Please try again.\",\n      },\n      { status: 500 }\n    );\n  }\n};\n\nexport default function RequestBid() {\n  const fetcher = useFetcher<ActionResponse>();\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    contactPreference: \"email\",\n    scope: \"\",\n    projectType: \"\",\n    projectDescription: \"\",\n    timeline: \"\",\n  });\n\n  // Effect to handle successful form submission\n  useEffect(() => {\n    if (fetcher.data?.success) {\n      setShowSuccess(true);\n\n      // Reset form\n      setFormData({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        contactPreference: \"email\",\n        scope: \"\",\n        projectType: \"\",\n        projectDescription: \"\",\n        timeline: \"\",\n      });\n\n      // Scroll to top\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n      // Hide after 3 seconds\n      const timer = setTimeout(() => {\n        setShowSuccess(false);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [fetcher.data]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formDataToSubmit = new FormData();\n    Object.entries(formData).forEach(([key, value]) => {\n      formDataToSubmit.append(key, value);\n    });\n\n    fetcher.submit(formDataToSubmit, {\n      method: \"post\",\n      action: \"/request-bid\",\n    });\n  };\n\n  const handleChange = (\n    e: React.ChangeEvent<\n      HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement\n    >\n  ) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div\n      className=\"min-h-screen bg-cover bg-center bg-no-repeat relative py-12\"\n      style={{\n        backgroundImage: `url('https://images.pexels.com/photos/7031595/pexels-photo-7031595.jpeg')`,\n      }}\n    >\n      {/* Dark overlay for better readability */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-50\"></div>\n\n      {/* Success Notification Pill */}\n      <div\n        className={`fixed top-20 left-1/2 transform -translate-x-1/2 z-[9999] transition-all duration-500 ${\n          showSuccess\n            ? \"opacity-100 translate-y-0\"\n            : \"opacity-0 -translate-y-4 pointer-events-none\"\n        }`}\n      >\n        <div className=\"bg-green-500 text-white px-4 py-2 rounded-full shadow-2xl flex items-center text-sm font-medium\">\n          <svg\n            className=\"w-4 h-4 mr-1.5\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n          {fetcher.data?.message || \"Request Sent Successfully!\"}\n        </div>\n      </div>\n\n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"relative max-w-3xl mx-auto\">\n          {/* Frosted glass background */}\n          <div className=\"absolute inset-0 bg-white/40 backdrop-filter backdrop-blur-md backdrop-saturate-150 rounded-xl\"></div>\n          {/* Additional blur layer */}\n          <div className=\"absolute inset-0 bg-black/10 backdrop-filter backdrop-blur-lg backdrop-saturate-150 rounded-xl\"></div>\n          {/* Content container */}\n          <div className=\"relative bg-white/20 rounded-xl shadow-2xl p-8 border border-white/40\">\n            <div className=\"text-center\">\n              <h2 className=\"text-3xl font-extrabold text-white sm:text-4xl\">\n                Request a Bid\n              </h2>\n              <p className=\"mt-4 text-lg text-white\">\n                Fill out the form below and we'll get back to you with a\n                detailed quote for your project.\n              </p>\n            </div>\n\n            {fetcher.data?.error && (\n              <div className=\"mt-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n                {fetcher.data.error}\n              </div>\n            )}\n\n            <div className=\"mt-12\">\n              <fetcher.Form\n                method=\"post\"\n                onSubmit={handleSubmit}\n                className=\"space-y-8\"\n              >\n                <div>\n                  <label\n                    htmlFor=\"name\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Name\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                    required\n                    value={formData.name}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"email\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Email\n                  </label>\n                  <input\n                    type=\"email\"\n                    name=\"email\"\n                    id=\"email\"\n                    required\n                    value={formData.email}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"phone\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Phone\n                  </label>\n                  <input\n                    type=\"tel\"\n                    name=\"phone\"\n                    id=\"phone\"\n                    required\n                    value={formData.phone}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm font-medium text-white mb-2\">\n                    Preferred Contact Method\n                  </label>\n                  <div className=\"flex space-x-6\">\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id=\"email-preference\"\n                        name=\"contactPreference\"\n                        value=\"email\"\n                        checked={formData.contactPreference === \"email\"}\n                        onChange={handleChange}\n                        className=\"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 accent-red-600\"\n                      />\n                      <label\n                        htmlFor=\"email-preference\"\n                        className=\"ml-2 text-sm text-white\"\n                      >\n                        Email\n                      </label>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <input\n                        type=\"radio\"\n                        id=\"phone-preference\"\n                        name=\"contactPreference\"\n                        value=\"phone\"\n                        checked={formData.contactPreference === \"phone\"}\n                        onChange={handleChange}\n                        className=\"h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 accent-red-600\"\n                      />\n                      <label\n                        htmlFor=\"phone-preference\"\n                        className=\"ml-2 text-sm text-white\"\n                      >\n                        Phone\n                      </label>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"scope\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Project Type\n                  </label>\n                  <select\n                    name=\"scope\"\n                    id=\"scope\"\n                    required\n                    value={formData.scope}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  >\n                    <option value=\"\">Select project type</option>\n                    <option value=\"residential\">Residential</option>\n                    <option value=\"commercial\">Commercial</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"projectType\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Project Scope\n                  </label>\n                  <select\n                    name=\"projectType\"\n                    id=\"projectType\"\n                    required\n                    value={formData.projectType}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  >\n                    <option value=\"\">Select project scope</option>\n                    <option value=\"general-contracting\">\n                      General Contracting\n                    </option>\n                    <option value=\"framing\">Framing</option>\n                    <option value=\"concrete\">Concrete</option>\n                    <option value=\"door-window-installation\">\n                      Door & Window Installation\n                    </option>\n                    <option value=\"finish-carpentry-trim\">\n                      Finish Carpentry & Trim\n                    </option>\n                    <option value=\"drywall\">Drywall</option>\n                  </select>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"projectDescription\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Project Description\n                  </label>\n                  <textarea\n                    name=\"projectDescription\"\n                    id=\"projectDescription\"\n                    rows={4}\n                    required\n                    value={formData.projectDescription}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"timeline\"\n                    className=\"block text-sm font-medium text-white\"\n                  >\n                    Desired Timeline\n                  </label>\n                  <input\n                    type=\"text\"\n                    name=\"timeline\"\n                    id=\"timeline\"\n                    placeholder=\"e.g., ASAP, 3 months, etc.\"\n                    required\n                    value={formData.timeline}\n                    onChange={handleChange}\n                    className=\"mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm\"\n                  />\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    disabled={fetcher.state !== \"idle\"}\n                    className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white ${\n                      fetcher.state !== \"idle\"\n                        ? \"bg-gray-400 cursor-not-allowed\"\n                        : \"bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n                    }`}\n                  >\n                    {fetcher.state !== \"idle\" ? (\n                      <div className=\"flex items-center\">\n                        <svg\n                          className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <circle\n                            className=\"opacity-25\"\n                            cx=\"12\"\n                            cy=\"12\"\n                            r=\"10\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"4\"\n                          ></circle>\n                          <path\n                            className=\"opacity-75\"\n                            fill=\"currentColor\"\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                          ></path>\n                        </svg>\n                        Submitting...\n                      </div>\n                    ) : (\n                      \"Submit Request\"\n                    )}\n                  </button>\n                </div>\n              </fetcher.Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport type { ActionFunction, LoaderFunction } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = () => {\n  console.log(\"Test route loaded\");\n  return json({ message: \"Test route loaded\" });\n};\n\nexport const action: ActionFunction = async ({ request }) => {\n  console.log(\"Test route action called\");\n  return json({ message: \"Test action called\" });\n};\n\nexport default function AdminTest() {\n  return (\n    <div className=\"p-4\">\n      <h1>Test Route</h1>\n      <form method=\"post\">\n        <button type=\"submit\">Test Post</button>\n      </form>\n    </div>\n  );\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport React from \"react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Our Services - Grit Construction\" },\n    {\n      name: \"description\",\n      content:\n        \"Professional general contracting and framing services for residential and commercial projects.\",\n    },\n  ];\n};\n\nconst services = [\n  {\n    title: \"General Contracting\",\n    description:\n      \"Full-service general contracting for residential and commercial projects. We manage every aspect of your construction project from start to finish.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Framing\",\n    description:\n      \"Expert framing services for new construction and renovations. We ensure structural integrity and precision in every project.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Concrete\",\n    description:\n      \"Professional concrete services including foundations, driveways, patios, and decorative concrete work. We deliver durable and aesthetically pleasing concrete solutions.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M19 21H5a2 2 0 01-2-2V5a2 2 0 012-2h14a2 2 0 012 2v14a2 2 0 01-2 2zM12 7v10M7 12h10\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Door & Window Installation\",\n    description:\n      \"Expert installation of doors and windows for both new construction and replacement projects. We ensure proper fitting, sealing, and energy efficiency in every installation.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Finish Carpentry & Trim\",\n    description:\n      \"Precision finish carpentry and trim work that adds the perfect finishing touch to your space. From baseboards to crown molding, we deliver exceptional craftsmanship and attention to detail.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Drywall\",\n    description:\n      \"Professional drywall installation and finishing services. From hanging to taping and texturing, we create flawless walls and ceilings that provide the perfect foundation for your space.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M4 6h16M4 12h16M4 18h16\"\n        />\n      </svg>\n    ),\n  },\n  {\n    title: \"Custom Solutions\",\n    description:\n      \"Tailored construction solutions to meet your specific needs and requirements.\",\n    icon: (\n      <svg\n        className=\"h-6 w-6\"\n        fill=\"none\"\n        viewBox=\"0 0 24 24\"\n        stroke=\"currentColor\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4z\"\n        />\n      </svg>\n    ),\n  },\n];\n\nexport default function Services() {\n  return (\n    <div\n      className=\"min-h-screen bg-cover bg-center bg-no-repeat relative\"\n      style={{\n        backgroundImage: `url('https://images.pexels.com/photos/7061662/pexels-photo-7061662.jpeg')`,\n      }}\n    >\n      {/* Dark overlay - using a lighter opacity for better visibility */}\n      <div className=\"absolute inset-0 bg-black bg-opacity-50\"></div>\n\n      {/* Content */}\n      <div className=\"relative max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center\">\n          <h2 className=\"text-base text-red-600 font-semibold tracking-wide uppercase\">\n            Our Services\n          </h2>\n          <p className=\"mt-2 text-3xl font-extrabold text-white sm:text-4xl\">\n            Professional Construction Services\n          </p>\n          <p className=\"mt-4 max-w-2xl text-xl text-white mx-auto\">\n            We provide comprehensive construction services for both residential\n            and commercial projects.\n          </p>\n        </div>\n\n        <div className=\"mt-20\">\n          <div className=\"grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-2\">\n            {services.map((service) => (\n              <div key={service.title} className=\"relative\">\n                <div className=\"relative bg-white bg-opacity-90 backdrop-blur-sm p-6 rounded-lg shadow-lg\">\n                  <div className=\"absolute top-0 left-0 -mt-4 -ml-4\">\n                    <div className=\"flex items-center justify-center h-8 w-8 rounded-full bg-red-600 text-white\">\n                      {service.icon}\n                    </div>\n                  </div>\n                  <h3 className=\"text-lg font-medium text-black\">\n                    {service.title}\n                  </h3>\n                  <p className=\"mt-2 text-base text-black\">\n                    {service.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mt-12 text-center\">\n          <Link\n            to=\"/request-bid\"\n            className=\"inline-flex items-center px-6 py-3 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n          >\n            Request a Bid\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { MetaFunction, ActionFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, useActionData, useFetcher } from \"@remix-run/react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Resend } from \"resend\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Contact Us - Grit Construction\" },\n    {\n      name: \"description\",\n      content:\n        \"Get in touch with Grit Construction for your construction needs.\",\n    },\n  ];\n};\n\ninterface ActionData {\n  success?: boolean;\n  error?: string;\n  message?: string;\n}\n\nexport const action: ActionFunction = async ({ request }) => {\n  const resend = new Resend(process.env.RESEND_API_KEY);\n  const formData = await request.formData();\n\n  // Safely extract and validate form data\n  const name = formData.get(\"name\");\n  const email = formData.get(\"email\");\n  const phone = formData.get(\"phone\");\n  const message = formData.get(\"message\");\n\n  // Validate all required fields are present and are strings\n  if (\n    !name ||\n    !email ||\n    !phone ||\n    !message ||\n    typeof name !== \"string\" ||\n    typeof email !== \"string\" ||\n    typeof phone !== \"string\" ||\n    typeof message !== \"string\"\n  ) {\n    return json(\n      { success: false, error: \"All fields are required and must be valid.\" },\n      { status: 400 }\n    );\n  }\n\n  try {\n    const { data: resendData, error } = await resend.emails.send({\n      from: \"Grit Construction <no-reply@grit-built.com>\",\n      to: [\"gritconstruction2023@gmail.com\"],\n      subject: `New Contact Form Message from ${\n        name.charAt(0).toUpperCase() + name.slice(1)\n      }`,\n      html: `\n        <h2>New Contact Form Message</h2>\n        <p><strong>Name:</strong> ${\n          name.charAt(0).toUpperCase() + name.slice(1)\n        }</p>\n        <p><strong>Email:</strong> ${email.toLowerCase()}</p>\n        <p><strong>Phone:</strong> ${phone}</p>\n        <p><strong>Message:</strong></p>\n        <p>${message}</p>\n      `,\n    });\n\n    if (error) {\n      return json(\n        {\n          success: false,\n          error: `Failed to send email: ${error.message}`,\n        },\n        { status: 500 }\n      );\n    }\n\n    return json(\n      {\n        success: true,\n        message: \"Message sent successfully!\",\n      },\n      { status: 200 }\n    );\n  } catch (error) {\n    return json(\n      {\n        success: false,\n        error:\n          error instanceof Error\n            ? error.message\n            : \"Failed to send message. Please try again.\",\n      },\n      { status: 500 }\n    );\n  }\n};\n\nexport default function Contact() {\n  const fetcher = useFetcher<ActionData>();\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    message: \"\",\n  });\n\n  // Effect to handle successful form submission\n  useEffect(() => {\n    if (fetcher.data?.success) {\n      setShowSuccess(true);\n\n      // Reset form\n      setFormData({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        message: \"\",\n      });\n\n      // Scroll to top\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\n\n      // Hide after 3 seconds\n      const timer = setTimeout(() => {\n        setShowSuccess(false);\n      }, 3000);\n\n      return () => clearTimeout(timer);\n    }\n  }, [fetcher.data]);\n\n  const handleChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const formDataToSubmit = new FormData();\n    Object.entries(formData).forEach(([key, value]) => {\n      formDataToSubmit.append(key, value);\n    });\n\n    fetcher.submit(formDataToSubmit, {\n      method: \"post\",\n      action: \"/contact\",\n    });\n  };\n\n  return (\n    <div className=\"bg-white\">\n      <div className=\"max-w-7xl mx-auto py-16 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-lg mx-auto md:max-w-none md:grid md:grid-cols-2 md:gap-8\">\n          <div>\n            <h2 className=\"text-2xl font-extrabold text-gray-900 sm:text-3xl\">\n              Contact Information\n            </h2>\n            <div className=\"mt-3\">\n              <p className=\"text-lg text-gray-700\">\n                Get in touch with us for any questions about our services or to\n                discuss your project.\n              </p>\n              <dl className=\"mt-8 text-base text-gray-700\">\n                <div>\n                  <dt className=\"sr-only\">Phone number</dt>\n                  <dd className=\"flex\">\n                    <svg\n                      className=\"flex-shrink-0 h-6 w-6 text-red-600\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z\"\n                      />\n                    </svg>\n                    <span className=\"ml-3\">(435) 760-4055</span>\n                  </dd>\n                </div>\n                <div className=\"mt-6\">\n                  <dt className=\"sr-only\">Email</dt>\n                  <dd className=\"flex\">\n                    <svg\n                      className=\"flex-shrink-0 h-6 w-6 text-red-600\"\n                      fill=\"none\"\n                      viewBox=\"0 0 24 24\"\n                      stroke=\"currentColor\"\n                    >\n                      <path\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        strokeWidth={2}\n                        d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                      />\n                    </svg>\n                    <span className=\"ml-3\">gritconstruction2023@gmail.com</span>\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n          <div className=\"mt-12 sm:mt-16 md:mt-0\">\n            <h2 className=\"text-2xl font-extrabold text-gray-900 sm:text-3xl\">\n              Send us a message\n            </h2>\n            <div className=\"mt-3\">\n              {fetcher.data?.error && (\n                <div className=\"mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded\">\n                  {fetcher.data.error}\n                </div>\n              )}\n\n              {showSuccess && (\n                <div className=\"mb-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded\">\n                  {fetcher.data?.message}\n                </div>\n              )}\n\n              <fetcher.Form\n                method=\"post\"\n                onSubmit={handleSubmit}\n                className=\"grid grid-cols-1 gap-y-6\"\n              >\n                <div>\n                  <label\n                    htmlFor=\"name\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Name\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      required\n                      value={formData.name}\n                      onChange={handleChange}\n                      className=\"py-3 px-4 block w-full shadow-sm focus:ring-2 focus:ring-blue-500 border-2 border-gray-400 rounded-md outline-none\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"email\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Email\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      required\n                      value={formData.email}\n                      onChange={handleChange}\n                      className=\"py-3 px-4 block w-full shadow-sm focus:ring-2 focus:ring-blue-500 border-2 border-gray-400 rounded-md outline-none\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"phone\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Phone\n                  </label>\n                  <div className=\"mt-1\">\n                    <input\n                      type=\"tel\"\n                      name=\"phone\"\n                      id=\"phone\"\n                      required\n                      value={formData.phone}\n                      onChange={handleChange}\n                      className=\"py-3 px-4 block w-full shadow-sm focus:ring-2 focus:ring-blue-500 border-2 border-gray-400 rounded-md outline-none\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <label\n                    htmlFor=\"message\"\n                    className=\"block text-sm font-medium text-gray-700\"\n                  >\n                    Message\n                  </label>\n                  <div className=\"mt-1\">\n                    <textarea\n                      name=\"message\"\n                      id=\"message\"\n                      rows={4}\n                      required\n                      value={formData.message}\n                      onChange={handleChange}\n                      className=\"py-3 px-4 block w-full shadow-sm focus:ring-2 focus:ring-blue-500 border-2 border-gray-400 rounded-md outline-none\"\n                    />\n                  </div>\n                </div>\n\n                <div>\n                  <button\n                    type=\"submit\"\n                    disabled={fetcher.state === \"submitting\"}\n                    className=\"w-full inline-flex items-center justify-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {fetcher.state === \"submitting\" ? (\n                      <>\n                        <svg\n                          className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\"\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          fill=\"none\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <circle\n                            className=\"opacity-25\"\n                            cx=\"12\"\n                            cy=\"12\"\n                            r=\"10\"\n                            stroke=\"currentColor\"\n                            strokeWidth=\"4\"\n                          ></circle>\n                          <path\n                            className=\"opacity-75\"\n                            fill=\"currentColor\"\n                            d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                          ></path>\n                        </svg>\n                        Sending...\n                      </>\n                    ) : (\n                      \"Send Message\"\n                    )}\n                  </button>\n                </div>\n              </fetcher.Form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import React from \"react\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { getAllImages, type GalleryImage } from \"../models/gallery.server\";\nimport type { LoaderFunction } from \"@remix-run/node\";\n\nexport const loader: LoaderFunction = async () => {\n  const images = await getAllImages();\n  return json({ images });\n};\n\nexport default function Gallery() {\n  const { images } = useLoaderData<{ images: GalleryImage[] }>();\n  const [selectedCategory, setSelectedCategory] = React.useState<string>(\"all\");\n  const [selectedService, setSelectedService] = React.useState<string>(\"all\");\n\n  // Get unique services and categories from images\n  const uniqueServices = [...new Set(images.map((img) => img.service))];\n  const uniqueCategories = [...new Set(images.map((img) => img.category))];\n\n  // Filter images based on both category and service\n  const filteredImages = images.filter((img) => {\n    const categoryMatch =\n      selectedCategory === \"all\" || img.category === selectedCategory;\n    const serviceMatch =\n      selectedService === \"all\" || img.service === selectedService;\n    return categoryMatch && serviceMatch;\n  });\n\n  // Reset both filters\n  const handleResetFilters = () => {\n    setSelectedCategory(\"all\");\n    setSelectedService(\"all\");\n  };\n\n  return (\n    <div className=\"min-h-screen bg-white py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center\">\n          <h2 className=\"text-3xl font-extrabold text-gray-900 sm:text-4xl\">\n            Our Work\n          </h2>\n          <p className=\"mt-4 text-lg text-gray-600\">\n            Browse through our portfolio of completed projects\n          </p>\n        </div>\n\n        {/* Combined Filters */}\n        <div className=\"mt-8\">\n          <div className=\"flex flex-wrap justify-center gap-2\">\n            {/* All Button */}\n            <button\n              onClick={handleResetFilters}\n              className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                selectedCategory === \"all\" && selectedService === \"all\"\n                  ? \"bg-red-600 text-white\"\n                  : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n              }`}\n            >\n              All\n            </button>\n\n            {/* Service Buttons */}\n            {uniqueServices.map((service) => (\n              <button\n                key={service}\n                onClick={() => setSelectedService(service)}\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                  selectedService === service\n                    ? \"bg-red-600 text-white\"\n                    : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                }`}\n              >\n                {service\n                  .split(\"-\")\n                  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n                  .join(\" \")}\n              </button>\n            ))}\n\n            {/* Category Buttons */}\n            {uniqueCategories.map((category) => (\n              <button\n                key={category}\n                onClick={() => setSelectedCategory(category)}\n                className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${\n                  selectedCategory === category\n                    ? \"bg-red-600 text-white\"\n                    : \"bg-gray-100 text-gray-600 hover:bg-gray-200\"\n                }`}\n              >\n                {category.charAt(0).toUpperCase() + category.slice(1)}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Gallery Grid */}\n        <div className=\"mt-12 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8\">\n          {filteredImages.length === 0 ? (\n            <div className=\"col-span-3 text-center text-gray-500\">\n              No images found for the selected filters\n            </div>\n          ) : (\n            filteredImages.map((image) => (\n              <div\n                key={image.id}\n                className=\"relative group overflow-hidden rounded-lg shadow-lg aspect-w-16 aspect-h-9\"\n              >\n                <img\n                  src={image.src}\n                  alt={image.alt}\n                  className=\"w-full h-full object-cover transform transition-transform duration-300 group-hover:scale-110\"\n                />\n                <div className=\"absolute inset-0 bg-black bg-opacity-40 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end\">\n                  <div className=\"p-4 w-full\">\n                    <p className=\"text-white text-sm\">{image.alt}</p>\n                    <div className=\"flex gap-2 mt-1\">\n                      <span className=\"text-red-400 text-xs\">\n                        {image.service\n                          ?.split(\"-\")\n                          .map(\n                            (word) =>\n                              word.charAt(0).toUpperCase() + word.slice(1)\n                          )\n                          .join(\" \")}\n                      </span>\n                      <span className=\"text-gray-300 text-xs\">\u2022</span>\n                      <span className=\"text-gray-300 text-xs\">\n                        {image.category.charAt(0).toUpperCase() +\n                          image.category.slice(1)}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { Link } from \"@remix-run/react\";\nimport React from \"react\";\n\nexport const meta: MetaFunction = () => {\n  return [\n    { title: \"Grit Construction - Professional General Contracting & Framing\" },\n    {\n      name: \"description\",\n      content:\n        \"Professional general contracting and framing services for residential and commercial projects.\",\n    },\n  ];\n};\n\nexport default function Index() {\n  return (\n    <div className=\"relative\">\n      {/* Hero section */}\n      <div className=\"relative h-[600px]\">\n        <div className=\"absolute inset-0\">\n          <img\n            src=\"/images/IMG_4391.jpg\"\n            alt=\"Quality Construction\"\n            className=\"w-full h-full object-cover\"\n          />\n          <div className=\"absolute inset-0 bg-black opacity-50\"></div>\n        </div>\n        <div className=\"relative h-full max-w-7xl mx-auto\">\n          <div className=\"relative z-10 h-full flex items-center\">\n            <main className=\"w-full mx-auto px-4 sm:px-6 lg:px-8\">\n              <div className=\"sm:text-center lg:text-left\">\n                <h1 className=\"text-4xl tracking-tight font-extrabold text-white drop-shadow-lg sm:text-5xl md:text-6xl\">\n                  <span className=\"block\">Quality Construction</span>\n                  <span className=\"block text-red-600 drop-shadow-lg\">\n                    Built with{\" \"}\n                    <img\n                      src=\"/images/GRIT_red.png\"\n                      alt=\"Grit\"\n                      className=\"h-16 w-auto inline-block\"\n                    />\n                  </span>\n                </h1>\n                <p className=\"mt-3 text-base text-white drop-shadow sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl lg:mx-0\">\n                  Professional general contracting and framing services for your\n                  residential and commercial projects. Get expert craftsmanship\n                  and reliable service.\n                </p>\n                <div className=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n                  <div className=\"rounded-md shadow\">\n                    <Link\n                      to=\"/request-bid\"\n                      className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-red-600 hover:bg-red-700 md:py-4 md:text-lg md:px-10\"\n                    >\n                      Request a Bid\n                    </Link>\n                  </div>\n                  <div className=\"mt-3 sm:mt-0 sm:ml-3\">\n                    <Link\n                      to=\"/services\"\n                      className=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-red-600 bg-white hover:bg-gray-50 md:py-4 md:text-lg md:px-10\"\n                    >\n                      Our Services\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n\n      {/* Featured Services */}\n      <div className=\"py-12 bg-white\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"lg:text-center\">\n            <h2 className=\"text-base text-red-600 font-semibold tracking-wide uppercase\">\n              Our Services\n            </h2>\n            <p className=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-black sm:text-4xl\">\n              Professional Construction Services\n            </p>\n          </div>\n\n          <div className=\"mt-10\">\n            <div className=\"space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10\">\n              {/* General Contracting */}\n              <div className=\"relative\">\n                <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-red-600 text-white\">\n                  <svg\n                    className=\"h-6 w-6\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4\"\n                    />\n                  </svg>\n                </div>\n                <div className=\"ml-16\">\n                  <h3 className=\"text-lg leading-6 font-medium text-black\">\n                    General Contracting\n                  </h3>\n                  <p className=\"mt-2 text-base text-black\">\n                    Full-service general contracting for residential and\n                    commercial projects.\n                  </p>\n                </div>\n              </div>\n\n              {/* Framing */}\n              <div className=\"relative\">\n                <div className=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-red-600 text-white\">\n                  <svg\n                    className=\"h-6 w-6\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\n                    />\n                  </svg>\n                </div>\n                <div className=\"ml-16\">\n                  <h3 className=\"text-lg leading-6 font-medium text-black\">\n                    Framing\n                  </h3>\n                  <p className=\"mt-2 text-base text-black\">\n                    Expert framing services for new construction and\n                    renovations.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n", "import { redirect } from \"@remix-run/node\";\nimport { Outlet } from \"@remix-run/react\";\nimport type { LoaderFunction } from \"@remix-run/node\";\nimport { getUserSession } from \"~/utils/session.server\";\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url);\n  const session = await getUserSession(request);\n  const username = session.get(\"username\");\n\n  // If we're on the login page and not authenticated, allow access\n  if (url.pathname === \"/admin/login\") {\n    if (username === process.env.ADMIN_USERNAME) {\n      // If already authenticated, redirect to upload page\n      return redirect(\"/admin/upload\");\n    }\n    return null;\n  }\n\n  // For all other admin routes, require authentication\n  if (username !== process.env.ADMIN_USERNAME) {\n    return redirect(\"/admin/login\");\n  }\n\n  // Allow access to protected routes if authenticated\n  return null;\n};\n\nexport default function Admin() {\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Outlet />\n    </div>\n  );\n}\n", "export default {'entry':{'module':'/build/entry.client-ISKK7BLI.js','imports':['/build/_shared/chunk-X3PXDGUE.js','/build/_shared/chunk-PEEBZOBP.js','/build/_shared/chunk-PLT55Z5M.js','/build/_shared/chunk-MT4G4X2W.js','/build/_shared/chunk-F4KNNEUR.js','/build/_shared/chunk-2Z2JGDFU.js','/build/_shared/chunk-JR22VO6P.js','/build/_shared/chunk-PZDJHGND.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-IMRTJGAV.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-U4PPPIWQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-BX5TRNXD.js','imports':['/build/_shared/chunk-NBEH4DGX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.login':{'id':'routes/admin.login','parentId':'routes/admin','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.login-EPILGESY.js','imports':['/build/_shared/chunk-HWDIXWJA.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.manage':{'id':'routes/admin.manage','parentId':'routes/admin','path':'manage','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.manage-QSZJKO2J.js','imports':['/build/_shared/chunk-GW4BFBY4.js','/build/_shared/chunk-HWDIXWJA.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.test':{'id':'routes/admin.test','parentId':'routes/admin','path':'test','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.test-WJQ4PSE5.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/admin.upload':{'id':'routes/admin.upload','parentId':'routes/admin','path':'upload','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin.upload-5S7UN5W2.js','imports':['/build/_shared/chunk-GW4BFBY4.js','/build/_shared/chunk-HWDIXWJA.js'],'hasAction':true,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/contact':{'id':'routes/contact','parentId':'root','path':'contact','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contact-ONWOLKTI.js','imports':['/build/_shared/chunk-6AL2JX5S.js','/build/_shared/chunk-NBEH4DGX.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/gallery':{'id':'routes/gallery','parentId':'root','path':'gallery','index':undefined,'caseSensitive':undefined,'module':'/build/routes/gallery-BVR65BUI.js','imports':['/build/_shared/chunk-GW4BFBY4.js','/build/_shared/chunk-NBEH4DGX.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/request-bid':{'id':'routes/request-bid','parentId':'root','path':'request-bid','index':undefined,'caseSensitive':undefined,'module':'/build/routes/request-bid-6GYIHSSO.js','imports':['/build/_shared/chunk-6AL2JX5S.js','/build/_shared/chunk-NBEH4DGX.js'],'hasAction':true,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/services':{'id':'routes/services','parentId':'root','path':'services','index':undefined,'caseSensitive':undefined,'module':'/build/routes/services-7FKQY6U4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'49a635ce','hmr':{'runtime':'/build/_shared/chunk-MT4G4X2W.js','timestamp':1742506658931},'url':'/build/manifest-49A635CE.js'};", "\nimport * as entryServer from \"/Users/stoney.harward/Projects/grit-planner/node_modules/@remix-run/dev/dist/config/defaults/entry.server.node.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/admin.manage.tsx\";\nimport * as route2 from \"./routes/admin.upload.tsx\";\nimport * as route3 from \"./routes/admin.login.tsx\";\nimport * as route4 from \"./routes/request-bid.tsx\";\nimport * as route5 from \"./routes/admin.test.tsx\";\nimport * as route6 from \"./routes/services.tsx\";\nimport * as route7 from \"./routes/contact.tsx\";\nimport * as route8 from \"./routes/gallery.tsx\";\nimport * as route9 from \"./routes/_index.tsx\";\nimport * as route10 from \"./routes/admin.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"v3_routeConfig\":false,\"v3_singleFetch\":false,\"v3_lazyRouteDiscovery\":false,\"unstable_optimizeDeps\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/admin.manage\": {\n      id: \"routes/admin.manage\",\n      parentId: \"routes/admin\",\n      path: \"manage\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/admin.upload\": {\n      id: \"routes/admin.upload\",\n      parentId: \"routes/admin\",\n      path: \"upload\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/admin.login\": {\n      id: \"routes/admin.login\",\n      parentId: \"routes/admin\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/request-bid\": {\n      id: \"routes/request-bid\",\n      parentId: \"root\",\n      path: \"request-bid\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/admin.test\": {\n      id: \"routes/admin.test\",\n      parentId: \"routes/admin\",\n      path: \"test\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/services\": {\n      id: \"routes/services\",\n      parentId: \"root\",\n      path: \"services\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/contact\": {\n      id: \"routes/contact\",\n      parentId: \"root\",\n      path: \"contact\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/gallery\": {\n      id: \"routes/gallery\",\n      parentId: \"root\",\n      path: \"gallery\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": ["jsxDEV", "jsxDEV", "loader", "React", "PutObjectCommand", "PutObjectCommand", "jsxDEV", "loader", "action", "React", "services", "action", "loader", "json", "Form", "useActionData", "Link", "PutObjectCommand", "jsxDEV", "loader", "json", "action", "PutObjectCommand", "useActionData", "Link", "Form", "action", "loader", "json", "redirect", "Form", "useActionData", "jsxDEV", "action", "json", "loader", "redirect", "useActionData", "Form", "action", "json", "useState", "jsxDEV", "action", "loader", "json", "jsxDEV", "Link", "jsxDEV", "action", "meta", "json", "useFetcher", "useState", "useEffect", "Resend", "Fragment", "jsxDEV", "loader", "React", "json", "useLoaderData", "jsxDEV", "loader", "json", "useLoaderData", "React", "meta", "Link", "jsxDEV", "loader", "redirect", "Outlet", "jsxDEV", "loader", "redirect", "Outlet"]
}
